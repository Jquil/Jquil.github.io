namespace ESP.BLL.CustomizeException
{
    /// <summary>
    /// /// <summary>
    /// 自定义权限（角色）验证
    /// </summary>
    /// </summary>
    public class UserAuthorizeFilterAttribute : Attribute, IAuthorizationFilter
    {

        public void OnAuthorization(AuthorizationFilterContext context)
        {
            var token = context.HttpContext.Request.Headers["Authorization"];
            token = token.ToString().Replace("Bearer ", "");

            IJsonSerializer serializer = new JsonNetSerializer();
            IDateTimeProvider provider = new UtcDateTimeProvider();
            IJwtValidator validator = new JwtValidator(serializer, provider);
            IBase64UrlEncoder urlEncoder = new JwtBase64UrlEncoder();
            IJwtAlgorithm jwtAlgorithm = new HMACSHA256Algorithm();
            IJwtDecoder decoder = new JwtDecoder(serializer, validator, urlEncoder, jwtAlgorithm);

            try
            {
                var json = decoder.DecodeToObject(token, "1Zl4h9703IzROikK3@uK&&OEb", verify: true);
                var userid = json["sub"].ToString();
                string controlName = ((Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)context.ActionDescriptor).ControllerName;
                string actionName = ((Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)context.ActionDescriptor).ActionName;

                AuthorityBLL authorityBLL = new AuthorityBLL();

                if (!authorityBLL.GetUserAuthority(userid, controlName, actionName))
                {
                    var content = new
                    {
                        code = 112,
                        Msg = "你没有此功能的操作权限",
                        Data = ""
                    };
                    ContentResult contentResult = new ContentResult();
                    contentResult.Content = JsonConvert.SerializeObject(content);
                    context.Result = contentResult;
                }
            }
            catch (Exception ex) {
                var content = new
                {
                    code = 401,
                    Msg = "你没有访问权限,请重新登录",
                    Data = ""
                };
                ContentResult contentResult = new ContentResult();
                contentResult.Content = JsonConvert.SerializeObject(content);
                context.Result = contentResult;
            }

            


        }

    }
}